apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3-qwen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: s3-qwen
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: s3-qwen
    spec:
      initContainers:
      - name: s3fs
        image: ubuntu:20.04
        command: ["/bin/sh", "-c"]
        restartPolicy: Always
        securityContext:
          privileged: true
        args:
        - apt-get update && apt-get install -y s3fs fuse && mkdir -p /mnt/s3 && s3fs zj-models /mnt/s3/ -o allow_other -o use_cache=/tmp
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - while true; do sleep 1; if [[ "$(mount | grep -c s3fs)" -ne 0 ]]; then break; fi; done
        env:
        - name: AWSACCESSKEYID
          valueFrom:
            secretKeyRef:
              name: access-key
              key: AWS_ACCESS_KEY_ID
        - name: AWSSECRETACCESSKEY
          valueFrom:
            secretKeyRef:
              name: access-key
              key: AWS_SECRET_ACCESS_KEY
        volumeMounts:
        - name: s3-mount
          mountPath: /mnt/s3
          mountPropagation: Bidirectional
      containers:
      - name: qwen
        args:
        - -c
        - sleep 600
        command:
        - /bin/bash
        # image: quay.io/zhujian/kube-ai-vllm:0.4.1
        # image: registry.cn-beijing.aliyuncs.com/fluid-namespace/vllm:0.4.1-nsys-optim
        image: quay.io/zhujian/kube-ai-vllm:0.4.1-nsys-optim
        ports:
        - containerPort: 8000
          name: qwen
        readinessProbe:
          httpGet:
            path: /v1/models
            port: 8000
          initialDelaySeconds: 120   # Wait 5 minutes before starting readiness checks
          periodSeconds: 10          # Check readiness every 10 seconds
          timeoutSeconds: 5          # Timeout for each readiness check
          failureThreshold: 5        # Number of consecutive failures before marking the pod as Unready
        livenessProbe:
          httpGet:
            path: /v1/models
            port: 8000
          initialDelaySeconds: 120   # Wait 5 minutes before starting liveness checks
          periodSeconds: 20          # Check liveness every 20 seconds
          timeoutSeconds: 5          # Timeout for each liveness check
          failureThreshold: 5        # Number of consecutive failures before restarting the container
        resources:
          limits:
            nvidia.com/gpu: "1"
            memory: 16Gi
          requests:
            nvidia.com/gpu: "1"
            memory: 2Gi
        volumeMounts:
        - name: s3-mount
          mountPath: /model
          subPath: models/Qwen1.5-4B-Chat
          mountPropagation: HostToContainer
      volumes:
      - name: s3-mount
        hostPath:
          path: "/tmp/s3"
          type: DirectoryOrCreate
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
